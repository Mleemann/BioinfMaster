includeConfig "$baseDir/params.config"

process.shell = ['/bin/bash','-e']

//process.container = 'quay.io/biocontainers/unicycler:0.4.8--py37h13b99d1_3'

singularity {
  cacheDir = "/scicore/home/egliadr/leeman0000/singularity"
  autoMounts = 'true'
  runOptions = '-B /scratch -B /home'
  enabled = 'true'
  }

profiles {

   slurm {
     executor {
        name="slurm"
        queue = 20
        clusterOptions = '--qos=1day'
        submitRateLimit = '5 sec'
        exitReadTimeout = '30 min'

     }

     process {
        containerOptions = { workflow.containerEngine == "docker" ? '-u $(id -u):$(id -g)': null}
        time = '5 min'
        clusterOptions = '--qos=30min'
        cpus = '8'
        memory = '2G'
        errorStrategy = 'ignore'


        withName: 'fastqc' {
          cpus = '1'
          memory = '3G'
        }

        withName: 'multiqc' {
          cpus = '1'
          memory = '500M'
        }

        withName: 'trimmomaticPE' {
          memory = '10G'
          time = { 8.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
        }

        withName: 'unicycler' {
          cpus = '8'
          memory = '20G'
          clusterOptions = '--qos=6hours'
          time = { 3.hour * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 2
        }

        withName: 'bwaIndex' {
          memory = '100M'
        }

        withName: 'bwaAlign' {
          cpus = '8'
        }

        withName: 'samtools' {
          memory = '20G'
        }

        withName: 'pilon' {
          memory = '20G'
          time = { 8.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
        }

        withName: 'pilon_remapping' {
          memory = '20G'
          time = { 8.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
        }

        withName: 'prokka' {
          memory = '50G'
          clusterOptions = '--qos=6hours'
          time = { 30.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
        }

        withName: 'rMLST' {
          memory = '5G'
          time = { 15.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
        }

        withName: 'metaphlan3' {
          memory = '10G'
          clusterOptions = '--qos=6hours'
          time = { 15.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
          cpus = '8'
        }

        withName: 'abricate' {
          memory = '10G'
          time = { 10.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
        }

        withName: 'amrfinder_nuc' {
          scratch = true
        }

        withName: 'amrfinder_prot' {
          scratch = true
        }

        withName: 'deeparg_LS' {
          memory = '10G'
          clusterOptions = '--qos=6hours'
          time = { 30.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
        }

        withName: 'deeparg_SR' {
          memory = '10G'
          clusterOptions = '--qos=6hours'
          time = { 30.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
        }

        withName: 'resfinder_fasta' {
          memory = '5G'
          cpus = '4'
          time = { 10.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
        }

        withName: 'resfinder_reads' {
          memory = '5G'
          cpus = '4'
          time = { 10.min * task.attempt }
          errorStrategy = 'retry'
          maxRetries = 3
        }

        withName: 'rgi' {
          memory = '15G'
        }

        withName: 'sraX_basic' {
          memory = '5G'
        }

        withName: 'sraX_ext' {
          memory = '5G'
        }

     }

   }

}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
  R_PROFILE_USER = "/.Rprofile"
  R_ENVIRON_USER = "/.Renviron"
}
